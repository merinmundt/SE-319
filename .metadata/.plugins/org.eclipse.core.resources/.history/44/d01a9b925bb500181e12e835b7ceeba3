import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

public class Server {

	private static Socket socket; 
	public static void main(String[] args) throws IOException {

		ServerSocket serversocket = new ServerSocket(); 
		int portNum = 4444;
		
		
		try {
			serversocket = new ServerSocket(4444); 									
			System.out.println("Server Started");
		}
			
		catch (IOException e) {
			System.out.println("Could not listen on port: 4444");
			System.exit(-1);
		}
		
		while(true){
			System.out.println(">Enter your name: ");
			socket = serversocket.accept();
			
			Scanner in;
			PrintWriter out;
			in = new Scanner(new BufferedInputStream(socket.getInputStream())); 
			out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));
			String name = in.nextLine();
			
		}
	}
}
		/**

			Socket clientSocket = null;
			try {
				
				ListClientHandler cl = new ListClientHandler(clientSocket);
				cl.start();
				System.out.println("Waiting for client " + (clientNum + 1)
						+ " to connect!");
				clientSocket = socket.accept(); 
				
				

				
				System.out.println("Server got connected to a client"
						+ ++clientNum);
				Thread t = new Thread(new ListClientHandler(clientSocket, clientNum));
				t.start();

			} catch (IOException e) {
				System.out.println("Accept failed: 4444");
				System.exit(-1);
			}

			
	} 

}

class ListClientHandler implements Runnable {
	Socket s;
	

	ListClientHandler(Socket s, int n) {
		this.s = s;
		num = n;
	}

	
	public void run() { 
		Scanner in;
		PrintWriter out;
		String name;
		
		try {
		
			in = new Scanner(new BufferedInputStream(s.getInputStream())); 
			out = new PrintWriter(new BufferedOutputStream(s.getOutputStream()));
			System.out.println(">Enter your name:");
			
			while(true){
				name = in.nextLine();
				
				
			}
			
		} 
		catch (IOException e) {
			e.printStackTrace();
		}
		
	} 
	


} // end of class ClientHandler
**/
