import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

public class client {

	Socket serverSocket;
	String Host = "localhost";
	int Port = 4444;
	ServerListener sl;
	String name;


	@SuppressWarnings("resource")
	client() throws IOException {
		// 1. CONNECT TO THE SERVER
		try {
			serverSocket = new Socket(Host, Port);
		} catch (UnknownHostException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
			}
		

		sl = new ServerListener(this, serverSocket);
		new Thread().start();

		PrintWriter out;
		try{
			
			Scanner in;
			out = new PrintWriter(new BufferedOutputStream(serverSocket.getOutputStream()));
			out.println("client's text:");
			in = new Scanner(new BufferedInputStream(serverSocket.getInputStream()));
			String text = in.nextLine();
			System.out.println(text);
			
		}
		
		finally{
			
		}
			
		/**public static void main(String[] args) throws IOException {
			client lc = new client();	
		}**/
}
		



	public void run() {
		// TODO Auto-generated method stub
		
	}

	



} // end of ListClient

class ServerListener extends client {
	client c;
	Scanner in; // this is used to read which is a blocking call

	
	ServerListener(client c, Socket s) throws IOException {
		try {
			this.c = c;
			in = new Scanner(new BufferedInputStream(s.getInputStream()));
			String message = in.nextLine();
			System.out.println(message);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		while (true) { // run forever
			String message = in.nextLine();
			System.out.println(message);
			
		}

	}
}
/**public class Reader extends Thread(){
	
	while(true){
		
	}
}

public class Writer extends Thread(){
	
	while(true){
		
	}
}**/
